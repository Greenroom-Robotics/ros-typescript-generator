// generated from rosidl_adapter/resource/msg.idl.em
// with input from visualization_msgs/msg/MenuEntry.msg
// generated code does not contain a copyright notice


module visualization_msgs {
  module msg {
    module MenuEntry_Constants {
      const uint8 FEEDBACK = 0;
      const uint8 ROSRUN = 1;
      const uint8 ROSLAUNCH = 2;
    };
    @verbatim (language="comment", text=
      " MenuEntry message." "\n"
      "" "\n"
      " Each InteractiveMarker message has an array of MenuEntry messages." "\n"
      " A collection of MenuEntries together describe a" "\n"
      " menu/submenu/subsubmenu/etc tree, though they are stored in a flat" "\n"
      " array.  The tree structure is represented by giving each menu entry" "\n"
      " an ID number and a \"parent_id\" field.  Top-level entries are the" "\n"
      " ones with parent_id = 0.  Menu entries are ordered within their" "\n"
      " level the same way they are ordered in the containing array.  Parent" "\n"
      " entries must appear before their children." "\n"
      "" "\n"
      " Example:" "\n"
      " - id = 3" "\n"
      "   parent_id = 0" "\n"
      "   title = \"fun\"" "\n"
      " - id = 2" "\n"
      "   parent_id = 0" "\n"
      "   title = \"robot\"" "\n"
      " - id = 4" "\n"
      "   parent_id = 2" "\n"
      "   title = \"pr2\"" "\n"
      " - id = 5" "\n"
      "   parent_id = 2" "\n"
      "   title = \"turtle\"" "\n"
      "" "\n"
      " Gives a menu tree like this:" "\n"
      "  - fun" "\n"
      "  - robot" "\n"
      "    - pr2" "\n"
      "    - turtle")
    struct MenuEntry {
      @verbatim (language="comment", text=
        " ID is a number for each menu entry.  Must be unique within the" "\n"
        " control, and should never be 0.")
      uint32 id;

      @verbatim (language="comment", text=
        " ID of the parent of this menu entry, if it is a submenu.  If this" "\n"
        " menu entry is a top-level entry, set parent_id to 0.")
      uint32 parent_id;

      @verbatim (language="comment", text=
        " menu / entry title")
      string title;

      @verbatim (language="comment", text=
        " Arguments to command indicated by command_type (below)")
      string command;

      uint8 command_type;
    };
  };
};
